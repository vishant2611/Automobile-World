<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='AutomobileWorld' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='classic' />
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='0.5' />
      <format attr='animation-style' value='as-phased' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top 10' datatype='real' name='[Profit Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
        <calculation class='tableau' formula='10.' />
        <range max='10.0' min='1.0' />
      </column>
      <column caption='Bottom 10' datatype='real' name='[Top 10 (copy)_720294503158747140]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
        <calculation class='tableau' formula='10.' />
        <range max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='car_mock_cleaned' inline='true' name='federated.04al5jb143xedj1g9uz2r18xqbfo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='car_mock_cleaned' name='textscan.0myxpgl0qyo8do1906oyy1jndxbe'>
            <connection class='textscan' directory='C:/Users/visha' filename='car_mock_cleaned.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0myxpgl0qyo8do1906oyy1jndxbe' name='car_mock_cleaned.csv' table='[car_mock_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Make' ordinal='1' />
            <column datatype='string' name='Model' ordinal='2' />
            <column datatype='string' name='Buyer_Gender' ordinal='3' />
            <column datatype='integer' name='Buyer_Age' ordinal='4' />
            <column datatype='string' name='Buzzword' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='string' name='City' ordinal='7' />
            <column datatype='real' name='Dealer_Latitude' ordinal='8' />
            <column datatype='real' name='Dealer_Longitude' ordinal='9' />
            <column datatype='string' name='Color' ordinal='10' />
            <column datatype='boolean' name='New_Car' ordinal='11' />
            <column datatype='date' name='Purchase_Date' ordinal='12' />
            <column datatype='real' name='Sale_Price' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='real' name='Resell_Price' ordinal='15' />
            <column datatype='real' name='5-yr_Depreciation' ordinal='16' />
            <column datatype='real' name='Top_Speed' ordinal='17' />
            <column datatype='real' name='0-60_Time' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0myxpgl0qyo8do1906oyy1jndxbe' name='car_mock_cleaned.csv' table='[car_mock_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Make' ordinal='1' />
            <column datatype='string' name='Model' ordinal='2' />
            <column datatype='string' name='Buyer_Gender' ordinal='3' />
            <column datatype='integer' name='Buyer_Age' ordinal='4' />
            <column datatype='string' name='Buzzword' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='string' name='City' ordinal='7' />
            <column datatype='real' name='Dealer_Latitude' ordinal='8' />
            <column datatype='real' name='Dealer_Longitude' ordinal='9' />
            <column datatype='string' name='Color' ordinal='10' />
            <column datatype='boolean' name='New_Car' ordinal='11' />
            <column datatype='date' name='Purchase_Date' ordinal='12' />
            <column datatype='real' name='Sale_Price' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='real' name='Resell_Price' ordinal='15' />
            <column datatype='real' name='5-yr_Depreciation' ordinal='16' />
            <column datatype='real' name='Top_Speed' ordinal='17' />
            <column datatype='real' name='0-60_Time' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buyer_Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Buyer_Gender]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Buyer_Gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buyer_Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Buyer_Age]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Buyer_Age</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buzzword</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Buzzword]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Buzzword</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dealer_Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dealer_Latitude]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Dealer_Latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dealer_Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dealer_Longitude]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Dealer_Longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Color</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Car</remote-name>
            <remote-type>11</remote-type>
            <local-name>[New_Car]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>New_Car</remote-alias>
            <ordinal>11</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase_Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Purchase_Date]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Purchase_Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sale_Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sale_Price]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Sale_Price</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resell_Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Resell_Price]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Resell_Price</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5-yr_Depreciation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5-yr_Depreciation]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>5-yr_Depreciation</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Top_Speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Top_Speed]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>Top_Speed</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0-60_Time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[0-60_Time]</local-name>
            <parent-name>[car_mock_cleaned.csv]</parent-name>
            <remote-alias>0-60_Time</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='0-60 Time' datatype='real' name='[0-60_Time]' role='measure' type='quantitative' />
      <column caption='5-yr Depreciation' datatype='real' name='[5-yr_Depreciation]' role='dimension' type='quantitative' />
      <column aggregation='None' caption='Buyer Age (bin)' datatype='integer' name='[Buyer Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Buyer_Age]' peg='0' size='10' />
        <aliases>
          <alias key='2' value='20-30' />
          <alias key='3' value='31-40' />
          <alias key='4' value='41-50' />
          <alias key='5' value='51-60' />
          <alias key='6' value='61-70' />
          <alias key='7' value='71-80' />
        </aliases>
      </column>
      <column caption='Buyer Age' datatype='integer' name='[Buyer_Age]' role='measure' type='quantitative' />
      <column caption='Buyer Gender' datatype='string' name='[Buyer_Gender]' role='dimension' type='nominal' />
      <column datatype='string' name='[Buzzword]' role='dimension' type='nominal' />
      <column caption='BuzzWord Count' datatype='integer' name='[Calculation_1489847091349880832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Buzzword])' />
      </column>
      <column caption='Profit' datatype='real' name='[Calculation_716916801326977025]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sale_Price]-[Resell_Price]' />
      </column>
      <column caption='index' datatype='integer' name='[Calculation_720294503152553987]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Dealer Latitude' datatype='real' name='[Dealer_Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Dealer Longitude' datatype='real' name='[Dealer_Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Car Companies' datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column caption='New Car' datatype='boolean' name='[New_Car]' role='dimension' type='nominal' />
      <column caption='Purchase Date' datatype='date' name='[Purchase_Date]' role='dimension' type='ordinal' />
      <column caption='Resell Price' datatype='real' name='[Resell_Price]' role='measure' type='quantitative' />
      <column caption='Sale Price' datatype='real' name='[Sale_Price]' role='measure' type='quantitative' />
      <column caption='Top Speed' datatype='real' name='[Top_Speed]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='car_mock_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]' role='measure' type='quantitative' />
      <column-instance column='[Buyer Age (bin)]' derivation='None' name='[none:Buyer Age (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Buzzword]' derivation='None' name='[none:Buzzword:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Buzzword,Car Companies)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Buzzword:nk]' />
          <groupfilter function='level-members' level='[Make]' />
        </groupfilter>
      </group>
      <group caption='Top 10 &amp; Bottom 10 ' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top 10 set (copy)]' function='reference' />
          <groupfilter field='[Top 10 set]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Top 20 set' name='[Top 10 set (copy 2)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([Calculation_716916801326977025])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Make]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom 10 set' name='[Top 10 set (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Top 10 (copy)_720294503158747140]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([Calculation_716916801326977025])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Make]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 set' name='[Top 10 set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Profit Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([Calculation_716916801326977025])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Make]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/F Drive/Anylytic tools and decision making  DAB 103/project/project 2/car_mock_cleaned.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/11/2022 04:13:09 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='car_mock_cleaned' increment-value='%null%' refresh-type='create' rows-inserted='10000' timestamp-start='2022-12-11 16:13:08.272' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Make</remote-alias>
              <ordinal>1</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model</remote-alias>
              <ordinal>2</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1119</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Buyer_Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Buyer_Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Buyer_Gender</remote-alias>
              <ordinal>3</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Buyer_Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Buyer_Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Buyer_Age</remote-alias>
              <ordinal>4</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Buzzword</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Buzzword]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Buzzword</remote-alias>
              <ordinal>5</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>373</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>6</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>7</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4452</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dealer_Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Dealer_Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dealer_Latitude</remote-alias>
              <ordinal>8</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4754</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dealer_Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Dealer_Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dealer_Longitude</remote-alias>
              <ordinal>9</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4802</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Color]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Color</remote-alias>
              <ordinal>10</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_Car</remote-name>
              <remote-type>11</remote-type>
              <local-name>[New_Car]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_Car</remote-alias>
              <ordinal>11</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Purchase_Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Purchase_Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Purchase_Date</remote-alias>
              <ordinal>12</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3492</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sale_Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sale_Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sale_Price</remote-alias>
              <ordinal>13</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>14</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3743</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Resell_Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Resell_Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Resell_Price</remote-alias>
              <ordinal>15</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>5-yr_Depreciation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[5-yr_Depreciation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>5-yr_Depreciation</remote-alias>
              <ordinal>16</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Top_Speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Top_Speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Top_Speed</remote-alias>
              <ordinal>17</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1749</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>0-60_Time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[0-60_Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>0-60_Time</remote-alias>
              <ordinal>18</ordinal>
              <family>car_mock_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>131</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Buzzword:nk]' palette='tableau-10' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Distributed&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Front-line&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;mobile&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Operative&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;projection&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;system engine&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Innovative&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;6th generation&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;internet solution&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;archive&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Optimized&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;actuating&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Automated&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cohesive&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;De-engineered&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;encryption&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frame&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;interactive&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;methodology&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;needs-based&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;paradigm&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;secured line&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Synergized&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;upward-trending&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Centralized&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diverse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Face to face&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Graphic Interface&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;info-mediaries&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;local area network&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;product&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;responsive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Streamlined&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;toolset&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;well-modulated&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24 hour&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;asymmetric&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;client-driven&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Customer-focused&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;empowering&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;focus group&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;groupware&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;matrices&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;multi-tasking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Programmable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;scalable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;support&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;uniform&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;algorithm&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;benchmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;composite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;demand-driven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;even-keeled&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Horizontal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;intranet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;next generation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Re-contextualized&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;systematic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;utilisation&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Digitized&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;adapter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;background&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;collaboration&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Decentralized&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Enhanced&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;framework&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;high-level&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;interface&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Networked&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;parallelism&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public-key&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Self-enabling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;synergy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;User-centric&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Configurable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24-Jul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;asynchronous&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;client-server&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;emulation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Focused&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;instruction set&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;matrix&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;orchestration&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Progressive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seamless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switchable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Universal&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;3rd generation&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Balanced&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;dedicated&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Exclusive&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;hardware&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Inverse&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Multi-channelled&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Persistent&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Reverse-engineered&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;attitude&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;contingency&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Down-sized&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;full-range&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;installation&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;model&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;protocol&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Up-sized&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;approach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;capability&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;contextually-based&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;extranet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Future-proofed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Implemented&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;leverage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;moratorium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Open-architected&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reduced&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;throughput&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;web-enabled&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4th generation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cross-group&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;fault-tolerant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Graphical User Interface&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;infrastructure&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;logistical&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Multi-lateral&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;optimal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;productivity&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;structure&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;workforce&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;analyzing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;budgetary management&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;content-based&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;directional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;explicit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;functionalities&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;impactful&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;knowledge user&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monitored&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;open architecture&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Realigned&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stand-alone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Team-oriented&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vision-oriented&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cloned&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;data-warehouse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;encoding&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;help-desk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;project&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;secondary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Synchronised&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;bottom-line&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Extended&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;hierarchy&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;maximized&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Multi-layered&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;Phased&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;software&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;bi-directional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;concept&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Devolved&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fully-configurable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hub&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Intuitive&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;non-volatile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Polarised&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Re-engineered&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;solution&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;systemic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;value-added&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;forecast&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;capacity&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;discrete&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;exuding&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;homogeneous&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;methodical&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Multi-tiered&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Pre-emptive&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;static&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ameliorated&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bifurcated&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;didactic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;executive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;function&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;human-resource&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Object-based&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;policy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;solution-oriented&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;tangible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Versatile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;application&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Business-focused&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;context-sensitive&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fundamental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;leading edge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;monitoring&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;open system&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pricing structure&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;standardization&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tertiary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Visionary&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;array&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;zero tolerance&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;architecture&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;global&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;incremental&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;local&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;motivating&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Open-source&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;process improvement&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;strategy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;time-frame&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adaptive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Compatible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fresh-thinking&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;holistic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;intermediate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;migration&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;neural-net&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quality-focused&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;service-desk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;user-facing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Customizable&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;alliance&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;challenge&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;disintermediate&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;implementation&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;middleware&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;multimedia&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Proactive&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Synergistic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;access&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;coherent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;database&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;encompassing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;foreground&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;heuristic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Integrated&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;national&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organized&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Secured&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Upgradable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5th generation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;artificial intelligence&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;circuit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cross-platform&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dynamic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;firmware&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;initiative&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Managed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Profit-focused&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Right-sized&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;success&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;transitional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;zero administration&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;core&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Enterprise-wide&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Function-based&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;intangible&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;moderator&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Optional&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Reactive&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;website&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;attitude-oriented&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Ergonomic&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Grass-roots&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;Persevering&quot;</bucket>
            </map>
            <map to='#f7c480'>
              <bucket>&quot;reciprocal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;analyzer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;conglomeration&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Expanded&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hybrid&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;knowledge base&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;object-oriented&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;portal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-time&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;stable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;task-force&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virtual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ability&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;modular&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Advanced&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bandwidth-monitored&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;complexity&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;definition&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;mission-critical&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;radical&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sharable&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;system-worthy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;User-friendly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assimilated&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;clear-thinking&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;customer loyalty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;eco-centric&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;flexibility&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;grid-enabled&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mandatory&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;multi-state&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;optimizing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Profound&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robust&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;superstructure&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Triple-buffered&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;zero defect&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Buyer Age (bin):ok]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>6</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>2</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>7</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>3</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>4</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Make:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bugatti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isuzu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panoz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Volvo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acura&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mercedes-Benz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Smart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Audi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mitsubishi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suzuki&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Citroën&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lamborghini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cadillac&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaguar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hillman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hummer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tesla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ferrari&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maybach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alfa Romeo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Geo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mercury&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spyker&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lotus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saab&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bentley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hyundai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toyota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corbin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Land Rover&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rambler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daewoo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jensen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lexus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Renault&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maserati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saturn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chevrolet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeep&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pontiac&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Infiniti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oldsmobile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Volkswagen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aptera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GMC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Merkur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Studebaker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daihatsu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peugeot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rolls-Royce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chrysler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Porsche&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aston Martin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Subaru&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top 10' datatype='real' name='[Profit Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
          <calculation class='tableau' formula='10.' />
          <range max='10.0' min='1.0' />
        </column>
        <column caption='Bottom 10' datatype='real' name='[Top 10 (copy)_720294503158747140]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
          <calculation class='tableau' formula='10.' />
          <range max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='car_mock_cleaned.csv' id='car_mock_cleaned.csv_A778FE34D278419E8BE98CE60083E902'>
            <properties context=''>
              <relation connection='textscan.0myxpgl0qyo8do1906oyy1jndxbe' name='car_mock_cleaned.csv' table='[car_mock_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Make' ordinal='1' />
                  <column datatype='string' name='Model' ordinal='2' />
                  <column datatype='string' name='Buyer_Gender' ordinal='3' />
                  <column datatype='integer' name='Buyer_Age' ordinal='4' />
                  <column datatype='string' name='Buzzword' ordinal='5' />
                  <column datatype='string' name='Country' ordinal='6' />
                  <column datatype='string' name='City' ordinal='7' />
                  <column datatype='real' name='Dealer_Latitude' ordinal='8' />
                  <column datatype='real' name='Dealer_Longitude' ordinal='9' />
                  <column datatype='string' name='Color' ordinal='10' />
                  <column datatype='boolean' name='New_Car' ordinal='11' />
                  <column datatype='date' name='Purchase_Date' ordinal='12' />
                  <column datatype='real' name='Sale_Price' ordinal='13' />
                  <column datatype='real' name='Discount' ordinal='14' />
                  <column datatype='real' name='Resell_Price' ordinal='15' />
                  <column datatype='real' name='5-yr_Depreciation' ordinal='16' />
                  <column datatype='real' name='Top_Speed' ordinal='17' />
                  <column datatype='real' name='0-60_Time' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_03890EDAD6D04AF18C46CF20F03F09C7]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Age Bins' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Buyer Age (bin)' />
        <param name='target' value='Age Bins' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_624E77D83ADC402AACCC1F3954128B8B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Automobile World' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Buyer Age (bin)' />
        <param name='target' value='Automobile World' />
      </command>
    </action>
    <action caption='max profit' name='[Action3_E03EFBDE148D469581930C9AE867638A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Profit Bottom 10' />
      <link caption='max profit' delimiter=',' escape='\' expression='tsl:Automobile%20World?%5Bfederated.04al5jb143xedj1g9uz2r18xqbfo%5D.%5BMake%5D~s0=&lt;[federated.04al5jb143xedj1g9uz2r18xqbfo].[Make]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Automobile World' />
      </command>
    </action>
    <datasources>
      <datasource caption='car_mock_cleaned' name='federated.04al5jb143xedj1g9uz2r18xqbfo' />
    </datasources>
    <datasource-dependencies datasource='federated.04al5jb143xedj1g9uz2r18xqbfo'>
      <column caption='Car Companies' datatype='string' name='[Make]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Age Bins'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>People of Different Age Groups Buying Used Car</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mock_cleaned' name='federated.04al5jb143xedj1g9uz2r18xqbfo' />
          </datasources>
          <datasource-dependencies datasource='federated.04al5jb143xedj1g9uz2r18xqbfo'>
            <column aggregation='None' caption='Buyer Age (bin)' datatype='integer' name='[Buyer Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Buyer_Age]' peg='0' size='10' />
              <aliases>
                <alias key='2' value='20-30' />
                <alias key='3' value='31-40' />
                <alias key='4' value='41-50' />
                <alias key='5' value='51-60' />
                <alias key='6' value='61-70' />
                <alias key='7' value='71-80' />
              </aliases>
            </column>
            <column caption='Buyer Age' datatype='integer' name='[Buyer_Age]' role='measure' type='quantitative' />
            <column-instance column='[Buyer_Age]' derivation='Count' name='[cnt:Buyer_Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Buyer Age (bin)]' derivation='None' name='[none:Buyer Age (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[cnt:Buyer_Age:qk]' scope='rows' value='Number  of People' />
            <format attr='auto-subtitle' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[cnt:Buyer_Age:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buyer Age (bin):ok]' value='Buyer Age'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='11'>Buyer Age</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buyer Age (bin):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04al5jb143xedj1g9uz2r18xqbfo].[cnt:Buyer_Age:qk]</rows>
        <cols>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buyer Age (bin):ok]</cols>
        <show-full-range>
          <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Buyer Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{14C2627A-9020-4BBD-966F-BB52B6EC3C11}' />
    </worksheet>
    <worksheet name='Avg resell price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average Resell Price of Used Cars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mock_cleaned' name='federated.04al5jb143xedj1g9uz2r18xqbfo' />
          </datasources>
          <datasource-dependencies datasource='federated.04al5jb143xedj1g9uz2r18xqbfo'>
            <column caption='Car Companies' datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='New Car' datatype='boolean' name='[New_Car]' role='dimension' type='nominal' />
            <column caption='Resell Price' datatype='real' name='[Resell_Price]' role='measure' type='quantitative' />
            <column-instance column='[Resell_Price]' derivation='Avg' name='[avg:Resell_Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_Car]' derivation='None' name='[none:New_Car:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:New_Car:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:New_Car:nk]' member='false' />
              <groupfilter function='member' level='[none:New_Car:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:New_Car:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Resell_Price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Resell_Price:qk]</rows>
        <cols>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{0742EE53-C689-4DB9-A1C8-BFA85775076B}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='18'>Most Profitable car companies country wise for used cars</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mock_cleaned' name='federated.04al5jb143xedj1g9uz2r18xqbfo' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='real' name='[Profit Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
              <range max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04al5jb143xedj1g9uz2r18xqbfo'>
            <column caption='Profit' datatype='real' name='[Calculation_716916801326977025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sale_Price]-[Resell_Price]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Car Companies' datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='Resell Price' datatype='real' name='[Resell_Price]' role='measure' type='quantitative' />
            <column caption='Sale Price' datatype='real' name='[Sale_Price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_716916801326977025]' derivation='Avg' name='[avg:Calculation_716916801326977025:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]' />
          <manual-sort column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Hillman&quot;</bucket>
              <bucket>&quot;Morgan&quot;</bucket>
              <bucket>&quot;Citroën&quot;</bucket>
              <bucket>&quot;Holden&quot;</bucket>
              <bucket>&quot;Jensen&quot;</bucket>
              <bucket>&quot;Lotus&quot;</bucket>
              <bucket>&quot;MG&quot;</bucket>
              <bucket>&quot;Panoz&quot;</bucket>
              <bucket>&quot;Smart&quot;</bucket>
              <bucket>&quot;Tesla&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Latitude (generated)]</column>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Longitude (generated)]</column>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Latitude (generated)]' field-type='quantitative' max='13990630.757082539' min='-1651655.5222864356' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Longitude (generated)]' field-type='quantitative' max='20987238.04182858' min='-20987238.041828576' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-red-light' />
            <format attr='geo-area-type' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' />
              <text column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]' />
              <text column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' />
              <lod column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Country:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Latitude (generated)]</rows>
        <cols>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5189BE11-21E1-41A1-9062-701F1F5DE94E}' />
    </worksheet>
    <worksheet name='Profit Bottom 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Car Companies with Minimum Profits</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mock_cleaned' name='federated.04al5jb143xedj1g9uz2r18xqbfo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bottom 10' datatype='real' name='[Top 10 (copy)_720294503158747140]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
              <range max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04al5jb143xedj1g9uz2r18xqbfo'>
            <column caption='Profit' datatype='real' name='[Calculation_716916801326977025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sale_Price]-[Resell_Price]' />
            </column>
            <column caption='Car Companies' datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='Resell Price' datatype='real' name='[Resell_Price]' role='measure' type='quantitative' />
            <column caption='Sale Price' datatype='real' name='[Sale_Price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_716916801326977025]' derivation='Avg' name='[avg:Calculation_716916801326977025:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set (copy)]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set (copy)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]' field-type='quantitative' max='20280.32' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]' scope='cols' value='Profit' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' value='Car Companies'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='12'>Car Companies</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]</rows>
        <cols>[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]</cols>
      </table>
      <simple-id uuid='{1F96DBE3-F5D7-47AB-97ED-E02E8DC2141A}' />
    </worksheet>
    <worksheet name='Profit Top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 10 Car Companies with Maximum Profits</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mock_cleaned' name='federated.04al5jb143xedj1g9uz2r18xqbfo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='real' name='[Profit Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
              <range max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04al5jb143xedj1g9uz2r18xqbfo'>
            <column caption='Profit' datatype='real' name='[Calculation_716916801326977025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sale_Price]-[Resell_Price]' />
            </column>
            <column caption='Car Companies' datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='Resell Price' datatype='real' name='[Resell_Price]' role='measure' type='quantitative' />
            <column caption='Sale Price' datatype='real' name='[Sale_Price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_716916801326977025]' derivation='Avg' name='[avg:Calculation_716916801326977025:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]' field-type='quantitative' max='65602.215499999991' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]' scope='cols' value='Profit' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' value='Car Companies'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='12'>Car Companies</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]</rows>
        <cols>[federated.04al5jb143xedj1g9uz2r18xqbfo].[avg:Calculation_716916801326977025:qk]</cols>
      </table>
      <simple-id uuid='{B79BB829-8987-4D5F-BBCB-89A98A2CC710}' />
    </worksheet>
    <worksheet name='Wordcloud'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Technical BuzzWords</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_mock_cleaned' name='federated.04al5jb143xedj1g9uz2r18xqbfo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='real' name='[Profit Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
              <calculation class='tableau' formula='10.' />
              <range max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04al5jb143xedj1g9uz2r18xqbfo'>
            <column datatype='string' name='[Buzzword]' role='dimension' type='nominal' />
            <column caption='BuzzWord Count' datatype='integer' name='[Calculation_1489847091349880832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Buzzword])' />
            </column>
            <column caption='Profit' datatype='real' name='[Calculation_716916801326977025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sale_Price]-[Resell_Price]' />
            </column>
            <column caption='Car Companies' datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='Resell Price' datatype='real' name='[Resell_Price]' role='measure' type='quantitative' />
            <column caption='Sale Price' datatype='real' name='[Sale_Price]' role='measure' type='quantitative' />
            <column-instance column='[Buzzword]' derivation='None' name='[none:Buzzword:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1489847091349880832]' derivation='User' name='[usr:Calculation_1489847091349880832:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Exclusions (Buzzword,Car Companies)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Buzzword:nk]' />
                <groupfilter function='level-members' level='[Make]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Citroën&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Distributed&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;full-range&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;implementation&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Innovative&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;installation&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Phased&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Pre-emptive&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Hillman&quot;' />
                    <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Proactive&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Holden&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;contingency&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;core&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;hardware&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Pre-emptive&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Reverse-engineered&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Jensen&quot;' />
                    <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;projection&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Lotus&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;3rd generation&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;6th generation&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;alliance&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;attitude-oriented&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;bottom-line&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;capacity&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;challenge&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;dedicated&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;discrete&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;disintermediate&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Down-sized&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Enterprise-wide&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Ergonomic&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Exclusive&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Extended&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;exuding&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Front-line&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Function-based&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Grass-roots&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;hardware&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;hierarchy&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;homogeneous&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;implementation&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Inverse&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;maximized&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;methodical&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;model&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;moderator&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Multi-channelled&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Multi-layered&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Operative&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Optional&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Persistent&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Proactive&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;protocol&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Reactive&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;reciprocal&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;software&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;static&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Synergistic&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;system engine&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;website&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MG&quot;' />
                    <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Balanced&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Morgan&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;attitude-oriented&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;dedicated&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Function-based&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;intangible&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;middleware&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;multimedia&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Persevering&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Panoz&quot;' />
                    <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;mobile&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Smart&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;methodical&quot;' />
                      <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Multi-tiered&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;Tesla&quot;' />
                    <groupfilter function='member' level='[none:Buzzword:nk]' member='&quot;Up-sized&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Buzzword:nk]' />
                  <hierarchy name='[Make]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]' />
          <slices>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]</column>
            <column>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Exclusions (Buzzword,Car Companies)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buzzword:nk]' />
              <size column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[usr:Calculation_1489847091349880832:qk]' />
              <text column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buzzword:nk]' />
              <lod column='[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E4460DD4-AD4A-4D41-8749-9D2E7FDC7D7D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Automobile World'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='26'>Automobile World</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#c0c0c0' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1620' minheight='900' minwidth='1620' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='19' param='horz' type-v2='layout-flow' w='99012' x='494' y='889'>
            <zone h='98222' id='16' param='horz' type-v2='layout-flow' w='89135' x='494' y='889'>
              <zone h='98222' id='7' param='vert' type-v2='layout-flow' w='89135' x='494' y='889'>
                <zone fixed-size='87' h='10556' id='9' is-fixed='true' type-v2='title' w='89135' x='494' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='87666' id='8' type-v2='layout-basic' w='89135' x='494' y='11445'>
                  <zone h='3555' id='12' is-centered='0' type-v2='bitmap' w='39876' x='494' y='95556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42555' id='17' name='Map' w='49259' x='40370' y='56556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='34111' id='21' name='Avg resell price' w='39876' x='494' y='11445'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25000' id='22' name='Profit Top 10' w='39876' x='494' y='45556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='27223' id='23' name='Age Bins' w='49259' x='40370' y='29333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17888' id='35' name='Wordcloud' w='49259' x='40370' y='11445'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25000' id='114' name='Profit Bottom 10' w='39876' x='494' y='70556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98222' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='9877' x='89629' y='889'>
              <zone h='30556' id='20' name='Map' pane-specification-id='2' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' type-v2='color' w='9877' x='89629' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20556' id='24' name='Age Bins' pane-specification-id='0' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buyer Age (bin):ok]' type-v2='color' w='9877' x='89629' y='31445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7889' id='13' param='C:/F Drive/Anylytic tools and decision making  DAB 103/project/project 2/istockphoto-1037657556-170667a.jpg' type-v2='bitmap' w='26481' x='4506' y='2444' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='26'>Automobile World</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='124' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='123' param='vert' type-v2='layout-flow' w='99012' x='494' y='889'>
                <zone fixed-size='87' h='10556' id='9' type-v2='title' w='89135' x='494' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='7889' id='13' is-fixed='true' param='C:/F Drive/Anylytic tools and decision making  DAB 103/project/project 2/istockphoto-1037657556-170667a.jpg' type-v2='bitmap' w='26481' x='4506' y='2444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34111' id='21' is-fixed='true' name='Avg resell price' w='39876' x='494' y='11445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='153' h='17888' id='35' is-fixed='true' name='Wordcloud' w='49259' x='40370' y='11445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='237' h='27223' id='23' is-fixed='true' name='Age Bins' w='49259' x='40370' y='29333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20556' id='24' name='Age Bins' pane-specification-id='0' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buyer Age (bin):ok]' type-v2='color' w='9877' x='89629' y='31445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='25000' id='22' is-fixed='true' name='Profit Top 10' w='39876' x='494' y='45556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42555' id='17' is-fixed='true' name='Map' w='49259' x='40370' y='56556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='30556' id='20' name='Map' pane-specification-id='2' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' type-v2='color' w='9877' x='89629' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='25000' id='114' is-fixed='true' name='Profit Bottom 10' w='39876' x='494' y='70556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='3555' id='12' is-centered='0' is-fixed='true' type-v2='bitmap' w='39876' x='494' y='95556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{42572176-4180-4395-8BFD-D82C375F1B48}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Avg resell price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]</field>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:New_Car:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06ACBA13-21F3-41AD-989C-26F3AAF61366}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='2' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Set 1]</field>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set (copy 2)]</field>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]</field>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{260945DE-F770-493F-93D6-184997316325}' />
    </window>
    <window class='worksheet' name='Profit Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B87CBA3-379E-4C5B-99DC-245847245ADF}' />
    </window>
    <window class='worksheet' name='Profit Bottom 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set (copy)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45EF4F45-7958-4059-B7BF-FB50B6237F3A}' />
    </window>
    <window class='worksheet' name='Age Bins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buyer Age (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buzzword:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B10CE6E1-39B4-40B0-B65F-E021A45E47CA}' />
    </window>
    <window class='worksheet' name='Wordcloud'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[Top 10 set]</field>
            <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Buzzword:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9F53582-3D8C-4037-8BFF-FFCD1235CB24}' />
    </window>
    <window class='dashboard' maximized='true' name='Automobile World'>
      <viewpoints>
        <viewpoint name='Age Bins'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg resell price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.04al5jb143xedj1g9uz2r18xqbfo].[none:Make:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Profit Bottom 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit Top 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Wordcloud'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{AAF61D59-7D5D-4E5A-B44D-234EEF77E2BB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Bins' width='192'>
      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
      HwaIuTRWIDhzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Automobile World' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg resell price' width='192'>
      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
      gpTm/wMBs9+1gqfwdAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      1eLmzZv87Gc/4+///u/pdrv0ej1s26bZbPK973//278/vggzlCIMQ0qlEu12m2KxSC6XSx1d
      EhJtnnGSRvtEr1PTNDJTEu+aptHt93nebp/KzJ8+n1N7pCleRingsuH2+7S3tw+s3pRRxFKp
      xI3r19NUX7lc5tNPP+Xu3bt89tlnfPe73+XRo0f88Y9/5P79+zx69Ih79+7RaDSIoojPPvuM
      RqPBD37wAx49egRAu9vF7fUI+v1zb6zp9/v8zd/8Dc+fP+fevXvMzc2ljev5fB7XdRM7BZRS
      hL6PkhLbMNJSiqTuyjCMibOMdEMe/K/PaX+9PVGTpMfWsOudDruxThBMSlj2BwOedTqnOvjh
      DAPgVcDKZsmVSkQHdYqFYVqcVSgUyOVyvPfee2xubnL37l3efPNNfve731GpVLhz5w65XI5C
      ocBvf/tbBoMB/X6fWq1GuVxGCEGlUiGIIrLZLN+9f5/V+XmW8nlKQHdzM/USPguEEHz88cfc
      vn2bP/zhD7z//vvMzc19W5Nz7Rr1en10Xhmbma1MhigIyMVFc0ldvhAjKfLcWI6+/bDBzp82
      WPv11+nk6MSlzs83N9ltNilms/R6vYm2x3anw7NOB+0MzpXHPgNMG8i9zgSuSy6KuBYbRM/P
      z79w1fvyyy95+vQpf/VXf7VvmtB13T09r0IInq6tUSqVGLguumEw8H2iqRn2Zankcswd47wz
      9H3Wp6TgRRiSBwr5PKZpphddibIbgFCC5lcbFBYrmJVRRWiz2cTzPGpzcwhdJxNnwAaDAYZh
      EEYRD3d29lTbnhavvCrEWSJcl5JlkclkJhQVgiDAcRx8308FmY792FMDe/r/pVI8296m43lY
      +5QIXwSR61KN7wzK5fKxGuKTdPH439Hr9Xiyvo55RPlJpRRRGB6rwHA2lZ8AoWksLCzseaMd
      x6FcLr/04E8fX+y1f03QhGB1YYHvLCxgXRIBAs22acX+XpqmpXKECUqNnFsOYrp82rbtY1Xc
      imO2n6pXWRjrPIgMg7VGY2JLmOS6zwvbtieK8i4SIQRmPp/qhX7xxRcAfPPNN/zrv/4r6+vr
      /OM//iMbGxtsbm7y4MEDHj9+zM9//nOCINgT6IZhTNyXnPrz1bTLFQD+cHjwgfMSIjSNQRjS
      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
      0L6q/H/UhowHg7l5CwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Bottom 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wordcloud' width='192'>
      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
      uRoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
